from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton

from requests import is_user_registered_db, get_specialities, get_groups_by_course_and_speciality, get_specialities_by_course_id, get_groups_by_course

async def menu_a():
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üìñ –ö—É—Ä—Å"), KeyboardButton(text="üéì –ü–æ—Ç–æ–∫ ")],
            [KeyboardButton(text="üìö –ì—Ä—É–ø–ø–∞")],
            [KeyboardButton(text="üìå –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")]],
        resize_keyboard=True, input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –Ω–∏–∂–µ")

async def menu_u(user_id):
    is_user_registered = await is_user_registered_db(user_id)
    registration_button = [KeyboardButton(text="üìå –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è")] if not is_user_registered else []
    profile_button = [KeyboardButton(text="üìã –ú–æ—è –∞–Ω–∫–µ—Ç–∞")] if is_user_registered else []
    return ReplyKeyboardMarkup(keyboard=[registration_button + profile_button], resize_keyboard=True, input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –Ω–∏–∂–µ")

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é
async def return_to_menu():
    return InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text="üè° –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data="return_to_menu")]])

# –ö–ª–∞–≤–∏–∞—É—Ç—Ä—ã –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async def kurs_registration():
    buttons = [
        [InlineKeyboardButton(text="1 –ö—É—Ä—Å", callback_data=f"reg.kurs.number_1"),
         InlineKeyboardButton(text="2 –ö—É—Ä—Å", callback_data=f"reg.kurs.number_2"),],
        [InlineKeyboardButton(text="3 –ö—É—Ä—Å", callback_data=f"reg.kurs.number_3"),
         InlineKeyboardButton(text="4 –ö—É—Ä—Å", callback_data=f"reg.kurs.number_4")],
        [InlineKeyboardButton(text="üè° –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data="return_to_menu")]]
    return InlineKeyboardMarkup(inline_keyboard=buttons)

async def group_without_speciality(course_id):
    groups = await get_groups_by_course(course_id)
    keyboard = []
    row = []
    for group in groups:
        button = InlineKeyboardButton(text=group.name, callback_data=f'reg.group_{group.id}')
        row.append(button)
        if len(row) == 2:
            keyboard.append(row)
            row = []
    if row:
        keyboard.append(row)
    keyboard.append([InlineKeyboardButton(text="üè° –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data="return_to_menu")])
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

async def newregistration(telegram_id):
    keyboard = [[InlineKeyboardButton(text=f'–ü—Ä–æ–π—Ç–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –∑–∞–Ω–æ–≤–æ', callback_data=f'reg.new_{telegram_id}')]]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫—É—Ä—Å–∞ (–∞–¥–º–∏–Ω)
async def kurs():
    buttons = [
        [InlineKeyboardButton(text="1 –ö—É—Ä—Å", callback_data=f"kurs.number_1"),
         InlineKeyboardButton(text="2 –ö—É—Ä—Å", callback_data=f"kurs.number_2"),],
        [InlineKeyboardButton(text="3 –ö—É—Ä—Å", callback_data=f"kurs.number_3"),
         InlineKeyboardButton(text="4 –ö—É—Ä—Å", callback_data=f"kurs.number_4")],
        [InlineKeyboardButton(text="üè° –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data="return_to_menu")]]
    return InlineKeyboardMarkup(inline_keyboard=buttons)

async def ready_kurs(kurs_id):
    keyboard = [[InlineKeyboardButton(text="‚úÖ –ì–æ—Ç–æ–≤–æ", callback_data=f"kurs.ready_{kurs_id}")],
                [InlineKeyboardButton(text="‚Ü©Ô∏è –ù–∞–ø–∏—Å–∞—Ç—å –µ—â–µ —Ä–∞–∑", callback_data=f"kurs.number_{kurs_id}")],
                [InlineKeyboardButton(text="üè° –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data="return_to_menu")]]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

# –ö–ª–∞–≤–∏–∞—Ç—É—Äs –¥–ª—è –ø–æ—Ç–æ–∫–∞ (–∞–¥–º–∏–Ω)
async def potok_kurs():
    buttons = [
        [InlineKeyboardButton(text="1 –ö—É—Ä—Å", callback_data=f"potok.kurs.number_1"),
         InlineKeyboardButton(text="2 –ö—É—Ä—Å", callback_data=f"potok.kurs.number_2"),],
        [InlineKeyboardButton(text="3 –ö—É—Ä—Å", callback_data=f"potok.kurs.number_3"),
         InlineKeyboardButton(text="4 –ö—É—Ä—Å", callback_data=f"potok.kurs.number_4")],
        [InlineKeyboardButton(text="üè° –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data="return_to_menu")]]
    return InlineKeyboardMarkup(inline_keyboard=buttons)

async def speciality_for_curs(course_id):
    speciality = await get_specialities_by_course_id(course_id)
    keyboard = [[InlineKeyboardButton(text=speciality.name, callback_data=f'potok.speciality_{speciality.id}')] for speciality in speciality]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

async def ready_speciality(speciality_id):
    keyboard = [[InlineKeyboardButton(text="‚úÖ –ì–æ—Ç–æ–≤–æ", callback_data=f"potok.ready_{speciality_id}")],
                [InlineKeyboardButton(text="‚Ü©Ô∏è –ù–∞–ø–∏—Å–∞—Ç—å –µ—â–µ —Ä–∞–∑", callback_data=f"potok.speciality_{speciality_id}")],
                [InlineKeyboardButton(text="üè° –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data="return_to_menu")]]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –≥—Ä—É–ø–ø—ã (–∞–¥–º–∏–Ω)
async def kurs_group():
    buttons = [
        [InlineKeyboardButton(text="1 –ö—É—Ä—Å", callback_data=f"group.number_1"),
         InlineKeyboardButton(text="2 –ö—É—Ä—Å", callback_data=f"group.number_2"),],
        [InlineKeyboardButton(text="3 –ö—É—Ä—Å", callback_data=f"group.number_3"),
         InlineKeyboardButton(text="4 –ö—É—Ä—Å", callback_data=f"group.number_4")],
        [InlineKeyboardButton(text="üè° –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data="return_to_menu")]]
    return InlineKeyboardMarkup(inline_keyboard=buttons)

async def group_speciality_for_curs(course_id):
    speciality = await get_specialities_by_course_id(course_id)
    keyboard = [[InlineKeyboardButton(text=speciality.name, callback_data=f'group.speciality_{speciality.id}')] for speciality in speciality]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

async def generate_group_keyboard(course_id, speciality_id):
    group = await get_groups_by_course_and_speciality(course_id, speciality_id)
    keyboard = [[InlineKeyboardButton(text=group.name, callback_data=f"group.group_{group.id}")] for group in group]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

async def ready_group(group_id):
    keyboard = [[InlineKeyboardButton(text="‚úÖ –ì–æ—Ç–æ–≤–æ", callback_data=f"group.ready_{group_id}")],
                [InlineKeyboardButton(text="‚Ü©Ô∏è –ù–∞–ø–∏—Å–∞—Ç—å –µ—â–µ —Ä–∞–∑", callback_data=f"group.group_{group_id}")],
                [InlineKeyboardButton(text="üè° –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data="return_to_menu")]]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)